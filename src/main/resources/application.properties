spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.flyway.locations=classpath:db/migration
spring.jpa.database=postgresql
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=false

# Load spring.datasource.username and .password from secrets.properties:
spring.config.import=optional:secrets.properties

spring.security.oauth2.client.registration.keycloak.client-id=login-app
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.scope=openid
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://10.0.2.2:8180/realms/SpringBootKeycloak
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://10.0.2.2:8180/realms/SpringBootKeycloak
# Contains public key used by server to verify data not modified:
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8180/realms/SpringBootKeycloak/protocol/openid-connect/certs
# Resource (KP client) that token intends to access:
jwt.auth.converter.resource-id=login-app
# Attribute in access token (JWT) client uses to id authenticated user:
jwt.auth.converter.principal-attribute=preferred_username

logging.level.org.springframework.security=DEBUG

server.port=8080
server.servlet.context-path=/